name: macOS
on:
  push:
    branches-ignore:
      - debian
      - khronos-registry
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        build-opts:
          - ''
          - '-Dglx=no'
          - '-Degl=yes'
          - '-Dx11=false'
      # Prevent the entire matrix from failing if one configuration fails
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/workflows/macos.yml') }}
      - name: Install dependencies and build
        run: |
          # Check if ninja is installed, install only if present
          if ! command -v ninja &> /dev/null; then
            brew install ninja
          fi
          python -m pip install --upgrade pip
          pip3 install meson
          mkdir -p meson-logs
          
          # Run the build script
          /bin/sh -c "CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}" || true
          
          # Find the build directory - this should be created by the script
          BUILD_DIR=$(find . -type d -name "build_*" | head -1)
          echo "Found build directory: $BUILD_DIR"
          
          # Copy logs to a consistent location
          if [ -d "$BUILD_DIR/meson-logs" ]; then
            cp -R "$BUILD_DIR/meson-logs/"* meson-logs/ || true
          fi
          
          # Ensure there's something in the logs directory for artifact upload
          touch meson-logs/build.log
          
          # Create a directory with a simpler structure for the artifacts
          mkdir -p artifacts/lib
          mkdir -p artifacts/include
          mkdir -p artifacts/test
          
          # Copy the dylib files
          if [ -f "$BUILD_DIR/src/libepoxy.dylib" ]; then
            cp "$BUILD_DIR/src/libepoxy.dylib" artifacts/lib/
            cp "$BUILD_DIR/src/libepoxy.0.dylib" artifacts/lib/ || true
          fi
          
          # Copy header files
          if [ -d "$BUILD_DIR/include" ]; then
            cp -R "$BUILD_DIR/include/"* artifacts/include/ || true
          fi
          
          # Copy test files
          if [ -d "$BUILD_DIR/test" ]; then
            cp -R "$BUILD_DIR/test/" artifacts/test/ || true
          fi
          
          # List what we've gathered
          echo "=== Artifacts contents ==="
          ls -la artifacts/lib/
          ls -la artifacts/include/ || true
          ls -la artifacts/test/ || true
      
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs-${{ matrix.build-opts || 'default' }}
          path: |
            meson-logs/
          retention-days: 7
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: libepoxy-build-${{ matrix.build-opts || 'default' }}
          path: |
            artifacts/
          retention-days: 30