name: macOS
on:
  push:
    branches-ignore:
      - debian
      - khronos-registry
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        build-opts:
          - ''
          - '-Dglx=no'
          - '-Degl=yes'
          - '-Dx11=false'
      # Prevent the entire matrix from failing if one configuration fails
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/workflows/macos.yml') }}
      - name: Install dependencies and build
        run: |
          # Install required dependencies
          brew install ninja pkg-config
          python -m pip install --upgrade pip
          pip3 install meson
          mkdir -p meson-logs
          
          # Print versions for debugging
          echo "=== Environment Information ==="
          python --version
          meson --version
          ninja --version
          clang --version
          
          # Check if the build script exists
          if [ ! -f ".github/scripts/epoxy-ci-osx.sh" ]; then
            echo "Error: Build script not found at .github/scripts/epoxy-ci-osx.sh"
            ls -la .github/scripts/
            exit 1
          fi
          
          # Make the script executable
          chmod +x .github/scripts/epoxy-ci-osx.sh
          
          # Run the build script with better error handling
          echo "=== Running build with options: ${{ matrix.build-opts }} ==="
          CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}
          BUILD_STATUS=$?
          
          if [ $BUILD_STATUS -ne 0 ]; then
            echo "Build failed with status $BUILD_STATUS"
            # Continue anyway to collect logs
          fi
          
          # Ensure there's something in the logs directory for artifact upload
          touch meson-logs/build.log
          
          # Find the build directory that was created (if any)
          BUILD_DIR=$(find /var/folders -type d -name "build_*" -mmin -5 | head -1)
          
          if [ -n "$BUILD_DIR" ]; then
            echo "Found build directory: $BUILD_DIR"
            echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
            
            # Get just the directory name (not the full path)
            BUILD_NAME=$(basename "$BUILD_DIR")
            echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
            
            # Debug: List what's in the build directory
            echo "==== Contents of $BUILD_DIR ===="
            ls -la "$BUILD_DIR"
            
            # Copy any meson logs to our log directory
            if [ -d "$BUILD_DIR/meson-logs" ]; then
              cp -r "$BUILD_DIR/meson-logs/"* meson-logs/ || true
            fi
            
            echo "==== Libraries in $BUILD_DIR ===="
            find "$BUILD_DIR" -name "*.dylib" | sort
          else
            echo "No build directory found. Build likely failed early."
          fi
          
          # Exit with the original build status
          exit $BUILD_STATUS
      
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs-${{ matrix.build-opts || 'default' }}
          path: |
            meson-logs/
          retention-days: 7
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: libepoxy-build-${{ matrix.build-opts || 'default' }}
          path: |
            # Only include specific files from the build directory
            /var/folders/**/${{ env.BUILD_NAME }}/src/*.dylib
            /var/folders/**/${{ env.BUILD_NAME }}/include/**/*.h
            /var/folders/**/${{ env.BUILD_NAME }}/test/*
          retention-days: 30
